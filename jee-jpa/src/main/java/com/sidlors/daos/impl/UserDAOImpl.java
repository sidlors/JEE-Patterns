
 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package com.sidlors.daos.impl;
 
 
 import com.sidlors.daos.UserDAO;
 
 
 
 import java.io.Serializable;
 import com.sidlors.daos.customdaosupport.CustomDAOSupport;
 import javax.persistence.Query;
 import java.util.List;
 import com.sidlors.entities.User;
 import java.math.BigDecimal;
 
 
 /***************************************************
 *DAO class of User table.
 *Generated on Sun Mar 29 10:36:48 CST 2015
 ***************************************************/
 
 
 public class UserDAOImpl extends CustomDAOSupport<User, Long>  implements Serializable, UserDAO {
 
 
	public UserDAOImpl(){
		super( User.class);
	}
 
 /**
 * @return User
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public List<User> findAll(){

		Query query = getDAOManager().createQuery(" select t from User t");

		List<User> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts User
 * @param: User
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public void save(User arg0){

		getDAOManager().persist(arg0);

	}
 
 /**
 * Updates User
 * @param: User
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public void update(User arg0){

		getDAOManager().merge(arg0);

	}
 
 /**
 * Removes User
 * @param: User
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public void delete(User arg0){

		getDAOManager().remove(arg0);

	}
 
 /**
 * @return User
 * @param: java.math.BigDecimal Id
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public List<User> getUsersById(BigDecimal id){

		Query query = getDAOManager().createQuery(" select t from User t where t.id = ?1 ");

		query.setParameter(1, id);


		List<User> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return User
 * @param: java.math.BigDecimal id
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public List<User> getUsersById(BigDecimal id, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from User t where t.id = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, id);


		List<User> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return User
 * @param: java.math.BigDecimal IsDisabled
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public List<User> getUsersByIsDisabled(BigDecimal isDisabled){

		Query query = getDAOManager().createQuery(" select t from User t where t.isDisabled = ?1 ");

		query.setParameter(1, isDisabled);


		List<User> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return User
 * @param: java.math.BigDecimal isDisabled
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public List<User> getUsersByIsDisabled(BigDecimal isDisabled, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from User t where t.isDisabled = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, isDisabled);


		List<User> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return User
 * @param: java.math.BigDecimal IsDeleted
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public List<User> getUsersByIsDeleted(BigDecimal isDeleted){

		Query query = getDAOManager().createQuery(" select t from User t where t.isDeleted = ?1 ");

		query.setParameter(1, isDeleted);


		List<User> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return User
 * @param: java.math.BigDecimal isDeleted
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Sun Mar 29 10:36:48 CST 2015
 * @See User
 */
	public List<User> getUsersByIsDeleted(BigDecimal isDeleted, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from User t where t.isDeleted = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, isDeleted);


		List<User> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 
 
 
 }